--AXIS/SQL_MINMAX.txt 2024-08-31_2321

WITH DMD AS(
	SELECT NULL AS "DocEntry", NULL AS "LineNum", im."ItemCode", im."Warehouse" AS "WhsCode", w1."WhsCode" AS "RcvWhs", im."DocDate", im."DocDate" AS "ShipDate", 
	(im."InQty"-im."OutQty") * -1 AS "Quantity", 'WHS'||w1."WhsCode" AS "CardCode"
	FROM OINM im
	JOIN WTR1 w1 ON im."CreatedBy"=w1."DocEntry" AND im."DocLineNum"=w1."LineNum"
	JOIN OITM i ON im."ItemCode"=im."ItemCode"
	WHERE im."DocDate" >= ADD_MONTHS(TO_DATE(YEAR(CURRENT_DATE) || '-' || LPAD(MONTH(CURRENT_DATE), 2, '0') || '-01', 'YYYY-MM-DD'), -24)
	AND im."Warehouse" IN('02') --From Warehouse
	AND w1."WhsCode" IN('TruckStock') --To Warehouse (ie Truck Stock)
	AND im."TransType"=67
	UNION ALL
	SELECT
	"DocEntry", "LineNum", "ItemCode", '03' AS "WhsCode", 'SALE' AS "RcvWhs", "DocDate", "ShipDate", "Quantity", "BaseCard" AS "CardCode"
	FROM RDR1
	WHERE "Quantity" > 0 AND NOT ("LineStatus"='C' AND "TargetType" = -1) AND "LineStatus" IN ('O', 'C') AND "DropShip"='N' 
	      AND "ShipDate" >= ADD_MONTHS(TO_DATE(YEAR(CURRENT_DATE) || '-' || LPAD(MONTH(CURRENT_DATE), 2, '0') || '-01', 'YYYY-MM-DD'), -24) 
	    --AND "WhsCode" IN('01') 
),

FCT_DETAIL AS (
	SELECT
	COUNT (*) OVER () AS total_row_count, 
	CASE
			WHEN IFNULL(ib."RuleCode",'') <> 'DF' AND IFNULL(i."RuleCode", '') <> 'DF' 
			THEN CURRENT_SCHEMA||' HISTORICAL ('||TO_VARCHAR(CURRENT_TIMESTAMP, 'MM/DD/YYYY HH24:MI')
			ELSE	CURRENT_SCHEMA||'_' || COALESCE('CG' || cg."GroupCode", 'TRWHS')||	
					     CASE 
					        WHEN COALESCE('CG' || cg."GroupCode", 'TRWHS') = COALESCE(c."ChannlBP", 'CG' || cg."GroupCode", 'TRWHS')
					        THEN '_OTHER'
					        ELSE '_' || COALESCE(c."ChannlBP", 'CG' || cg."GroupCode", 'TRWHS')
					     END||' - '||
					cg."GroupName"||': '||IFNULL(cbp."CardName",'OTHER')||'  ('||TO_VARCHAR(CURRENT_TIMESTAMP, 'MM/DD/YYYY HH24:MI')||')'
	END AS "FctSheetName",
	COALESCE('CG'||cg."GroupCode", 'TRWHS') AS "FctGroupCode",
	CASE 
	    WHEN IFNULL(ib."RuleCode",'') <> 'DF' AND IFNULL(i."RuleCode", '') <> 'DF' THEN CURRENT_SCHEMA||'_HF'
	    ELSE COALESCE(c."ChannlBP", 'CG' || cg."GroupCode", 'TRWHS')||'DF' 
	END AS "FctSheetCode",
	r1."CardCode" AS "FctCardCode",	
	TO_NVARCHAR(YEAR("ShipDate") + 1) || TO_NVARCHAR(MONTH("ShipDate"), '00') || '01' AS "FctPeriod",
	COALESCE(ai."ItemCode",i."ItemCode") AS "FctItemCode",
	r1."WhsCode" AS "FctWhsCode",	
	r1."DocEntry", r1."LineNum",
	ai."ItemCode" AS "AltItemCode", i."ItemCode" AS "OrderItemCode", COALESCE(ai."ItemCode",i."ItemCode") AS "ItemCode", 
	ai."PlaningSys" AS "AltPlaningSys", i."PlaningSys" AS "OrderPlaningSys", COALESCE(ai."PlaningSys",i."PlaningSys") AS "PlaningSys",
	ai."LeadTime" AS "AltLeadTime", i."LeadTime" AS "OrderLeadTime", COALESCE(ai."LeadTime",i."LeadTime") AS "LeadTime",	
	ai."OrdrIntrvl" AS "AltOrdrIntrvl", i."OrdrIntrvl" AS "OrderOrdrIntrvl", COALESCE(ai."OrdrIntrvl",i."OrdrIntrvl") AS "OrdrIntrvl",	
	ai."OrdrMulti" AS "AltOrdrMulti", i."OrdrMulti" AS "OrderOrdrMulti", COALESCE(ai."OrdrMulti",i."OrdrMulti") AS "OrdrMulti",
	acy."Name" AS "AltName", cy."Name" AS "OrderName", COALESCE(acy."Name",cy."Name") AS "Name",
 	a."Match", r1."Quantity" AS "OrderQuantity", CAST(CASE WHEN a."Match" IS NULL then "Quantity" ELSE 100/a."Match" * "Quantity" END AS INTEGER) AS "Quantity",
	r1."CardCode" AS "CustCardCode", ai."CardCode" AS "AltVendCode", i."CardCode" AS "OrderVendCode", COALESCE(ai."CardCode",i."CardCode") AS "VendCode",
	r1."WhsCode", r1."WhsCode" AS "ShipWhs", "DocDate", "ShipDate", a."Remarks", iw."MinOrder",
    ADD_MONTHS(TO_DATE(ADD_DAYS(CURRENT_DATE, -DAYOFWEEK(CURRENT_DATE))), -12) AS "YrStartDate",
    TO_DATE(ADD_DAYS(CURRENT_DATE, -DAYOFWEEK(CURRENT_DATE))) AS "YrEndDate",
    ib."ItmsGrpCod", ib."ItmsGrpNam", 'CG-'||cg."GroupCode" AS "GroupCode", cg."GroupName", c."ChannlBP", i."RuleCode",
	CASE 
        WHEN ib."RuleCode" = 'DF' OR i."RuleCode" = 'DF' THEN 'FUTURE'
        ELSE 'HISTORICAL'
    END AS "DF_Status",
	CASE
		WHEN "ShipDate" >= ADD_MONTHS(TO_DATE(YEAR(CURRENT_DATE) || '-' || LPAD(MONTH(CURRENT_DATE), 2, '0') || '-01', 'YYYY-MM-DD'), -12) THEN 1
		ELSE 0
	END AS FUTURE_PD,
	CASE
	    WHEN "ShipDate" >= ADD_DAYS(CURRENT_DATE, -364) THEN 1
	    ELSE 0
	END AS HISTORICAL_PD
	FROM DMD r1
	LEFT JOIN OITM i ON r1."ItemCode"=i."ItemCode"
	LEFT JOIN OITW iw ON r1."ItemCode"=iw."ItemCode" AND '03'=iw."WhsCode" 
	LEFT JOIN OCRD c ON r1."CardCode"=c."CardCode"
	LEFT JOIN OCRD cbp ON cbp."CardCode"=c."ChannlBP"
	LEFT JOIN OCYC cy ON cy."Code" = i."OrdrIntrvl" 
	LEFT JOIN OALI a ON r1."ItemCode"=a."OrigItem" AND i."PlaningSys"='N'
	LEFT JOIN OITM ai ON (a."AltItem"=ai."ItemCode" OR ai."ItemCode" IS NULL)  AND i."PlaningSys"='N'
	LEFT JOIN OCYC acy ON acy."Code" = ai."OrdrIntrvl"
	LEFT JOIN OCRG cg ON  cg."GroupCode"=c."GroupCode"
	LEFT JOIN OITB ib ON ib."ItmsGrpCod"=i."ItmsGrpCod"	
	WHERE i."LeadTime"<>0 AND i."LeadTime" IS NOT NULL AND cy."Name"<> 'NONSTOCK' AND NOT(i."PlaningSys"='N' AND ai."PlaningSys"='N') 
	--AND ib."RuleCode"='DF' OR i."RuleCode"='DF'
),

LT_DATES AS (
SELECT
        LT."LeadTime",
        WN."WkNum",
        ADD_DAYS(WN."WkEndDate", -6) AS "WkStartDate",
        WN."WkEndDate",
        ADD_DAYS(ADD_MONTHS(CURRENT_DATE, -12), 1) AS "YrStartDate",
        CURRENT_DATE AS "YrEndDate",
		--ADD_MONTHS(TO_DATE(ADD_DAYS(CURRENT_DATE, -DAYOFWEEK(CURRENT_DATE))), -12) AS "YrStartDate",
        --TO_DATE(ADD_DAYS(ADD_DAYS(CURRENT_DATE, -DAYOFWEEK(CURRENT_DATE)), 1)) AS "YrEndDate",
        ADD_DAYS(WN."WkEndDate", -1 * (FLOOR((LT."LeadTime" + 1) / 5) * 7 + MOD(LT."LeadTime" + 1, 5))) AS "LtStartDate",
        WN."WkEndDate" AS "LtEndDate",
        ADD_MONTHS(WN."WkEndDate", -12) AS "LtYrStartDate",
        WN."WkEndDate" AS "LtYrEndDate",
  		ADD_DAYS(ADD_YEARS(CURRENT_DATE, -1), 0*7) AS "LastYrToday",  --Used for Seasonal Beginning change 0 to shift weeks
  		ADD_DAYS(ADD_DAYS(ADD_YEARS(CURRENT_DATE, -1), 0*7), CAST((LT."LeadTime" + 4) / 5 AS INTEGER) *7 ) AS "LastYrTodayLt"   --Used for Seasonal Beginning change 0 to shift weeks     
    FROM (
        SELECT 
            TO_DATE(ADD_DAYS(CURRENT_DATE, -7 * (GENERATED_PERIOD_START - 1) + 7 - DAYOFWEEK(CURRENT_DATE))) AS "WkEndDate",
            -1 * (GENERATED_PERIOD_START - 1) AS "WkNum"
        FROM SERIES_GENERATE_INTEGER(1, 2, 54)
    ) WN
    JOIN (
        SELECT GENERATED_PERIOD_START AS "LeadTime"
        FROM SERIES_GENERATE_INTEGER(5, 4, 260)
    ) LT ON 1 = 1
    ORDER BY "WkEndDate" DESC, "WkNum" DESC, "LeadTime" ASC
),

WH_LINE AS (
SELECT
    t0."ItemCode",
    t0."WhsCode",
    ROW_NUMBER() OVER (PARTITION BY t0."ItemCode" ORDER BY t0."WhsCode") - 1 AS "WhLineNum",                     
    t0."MinStock",
    t0."MaxStock"       
FROM OITW t0
INNER JOIN OWHS t1 ON t0."WhsCode" = t1."WhsCode"
WHERE t1."Inactive" = 'N' --AND t0."WhsCode" IN('01', '02', '03') 
),

FCT_WKLY_HISTORICAL AS(
SELECT F."AbsID" AS "FctAbsID", F."Code", "FctSheetName"||' ID'||F."AbsID"||')' AS "FctSheetName", "FctSheetCode", "FctItemCode", "FctWhsCode", "DF_Status", CAST(SUM("Quantity") AS INTEGER) AS "FctQuantity",
"LeadTime", "PlaningSys", "RuleCode", FD."Name", "OrdrIntrvl", "OrdrMulti", "DocDate", "ShipDate"
FROM FCT_DETAIL FD
LEFT JOIN OFCT F ON F."Code"=FD."FctSheetCode"
WHERE "DF_Status"='HISTORICAL' AND HISTORICAL_PD=1
GROUP BY F."AbsID", F."Code", "FctSheetName", "FctSheetCode", "FctItemCode", "FctWhsCode", "DF_Status", "LeadTime", "PlaningSys", "RuleCode", FD."Name", "OrdrIntrvl", "OrdrMulti", "DocDate", "ShipDate"
HAVING CAST(SUM("Quantity") AS INTEGER)>0
),

FCT_WKLY_HISTORICAL_LTDATES AS (
    SELECT 
        fwh."PlaningSys", fwh."FctItemCode", fwh."FctWhsCode", wl."WhLineNum", fwh."Name" , fwh."RuleCode", ltdates."LeadTime" AS "LtdLt", wl."MinStock", wl."MaxStock", 
        SUM(1) OVER (
            PARTITION BY fwh."FctItemCode", fwh."FctWhsCode"
            ORDER BY SUM(CASE WHEN fwh."ShipDate" BETWEEN ltdates."LtStartDate" AND ltdates."LtEndDate" THEN fwh."FctQuantity" ELSE 0 END)
            ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) 
        AS "LtQtyWk",  
        SUM(CASE WHEN fwh."ShipDate" BETWEEN ltdates."LtStartDate" AND ltdates."LtEndDate" THEN fwh."FctQuantity" ELSE 0 END) AS "LtQty",
        SUM(CASE WHEN fwh."ShipDate" BETWEEN ltdates."YrStartDate" AND ltdates."YrEndDate" THEN fwh."FctQuantity" ELSE 0 END) AS "YrQty",                      
        SUM(CASE WHEN fwh."ShipDate" BETWEEN ltdates."LastYrToday" AND ltdates."LastYrTodayLt" THEN fwh."FctQuantity" ELSE 0 END) AS "LastYrLtQty"                            
    FROM FCT_WKLY_HISTORICAL fwh
    LEFT JOIN LT_DATES ltdates ON ltdates."LeadTime" = CAST((fwh."LeadTime" + 4) / 5 AS INTEGER) * 5 - 1
    LEFT JOIN WH_LINE wl ON wl."ItemCode" = fwh."FctItemCode" AND wl."WhsCode" = fwh."FctWhsCode"
	GROUP BY 
	    fwh."PlaningSys", fwh."FctItemCode", fwh."FctWhsCode", fwh."RuleCode", wl."WhLineNum", 
	    wl."MinStock", wl."MaxStock", fwh."Name", 
	    ltdates."LeadTime", fwh."LeadTime", CAST((fwh."LeadTime" + 4) / 5 AS INTEGER) * 5 - 1, ltdates."WkNum",
	    ltdates."WkStartDate", ltdates."WkEndDate", ltdates."LtStartDate", ltdates."LtEndDate", ltdates."YrStartDate", ltdates."YrEndDate",
	    ltdates."LtYrStartDate", ltdates."LtYrEndDate", ltdates."LastYrToday", ltdates."LastYrTodayLt"
),

LEADTIME_DEMAND AS (
SELECT 
	"FctItemCode",
	"FctWhsCode",
	"RuleCode",
	CASE 
	    WHEN "RuleCode" = 'SE' THEN GREATEST("LastYrLtQty", MIN(CASE WHEN "LtQtyWk" >= 50 THEN "LtQty" END))
	    ELSE MIN(CASE WHEN "LtQtyWk" >= 50 THEN "LtQty" END)
	END AS "LtDmd"  
FROM FCT_WKLY_HISTORICAL_LTDATES wsd
GROUP BY "FctItemCode", "FctWhsCode", "LastYrLtQty", "RuleCode" 
),

MINMAX AS (
SELECT
    fwhl."FctItemCode",
    fwhl."FctWhsCode", 
    fwhl."WhLineNum", 
    CAST(CASE
    	WHEN fwhl."Name"='NONSTOCK' OR "PlaningSys"<>'M' THEN 0 
    	ELSE CAST("YrQty"/52 * ("LtdLt"+1)/5 - CAST("YrQty"/52 AS INTEGER) * ("LtdLt"+1)/5 + 1 AS INTEGER) + GREATEST(0, LTDMD."LtDmd" - CAST("YrQty" / 52 AS INTEGER) * ("LtdLt" + 1) / 5) + CAST("YrQty"/52 AS INTEGER)
    END AS INTEGER) AS "MinimalStock",  
    CAST(CASE
    	WHEN fwhl."Name"='NONSTOCK' OR "PlaningSys"<>'M' THEN 0 
    	ELSE CAST("YrQty"/52 * ("LtdLt"+1)/5 - CAST("YrQty"/52 AS INTEGER) * ("LtdLt"+1)/5 + 1 AS INTEGER) + GREATEST(0, LTDMD."LtDmd" - CAST("YrQty" / 52 AS INTEGER) * ("LtdLt" + 1) / 5) + CAST("YrQty"/52 AS INTEGER)
    END AS INTEGER) AS "MaximalStock",
    fwhl."MinStock", fwhl."MaxStock",
    99999 AS "BeginCalc",
    CAST("YrQty"/52 * ("LtdLt"+1)/5 - CAST("YrQty"/52 AS INTEGER) * ("LtdLt"+1)/5 + 1 AS INTEGER) AS "LtMinRounding",
    CAST("LtDmd" AS INTEGER) AS "DMD50Wks",
    CAST(CAST("YrQty"/52 AS INTEGER) * ("LtdLt"+1)/5 * -1 AS INTEGER) AS "Fct90Dmd",
    CAST("YrQty"/52 AS INTEGER) AS "WklyDmd", 
    99999 AS "EndCalc"  
FROM FCT_WKLY_HISTORICAL_LTDATES fwhl
LEFT JOIN LEADTIME_DEMAND LTDMD ON fwhl."FctItemCode"=LTDMD."FctItemCode" and fwhl."FctWhsCode"=LTDMD."FctWhsCode"
GROUP BY fwhl."FctItemCode", fwhl."FctWhsCode", fwhl."WhLineNum", fwhl."Name", fwhl."PlaningSys", 
fwhl."YrQty", fwhl."LtdLt", LTDMD."LtDmd", fwhl."MinStock", fwhl."MaxStock"

HAVING 
	    CAST(CASE
    		WHEN fwhl."Name"='NONSTOCK' OR "PlaningSys"<>'M' THEN 0 
    		ELSE CAST("YrQty"/52 * ("LtdLt"+1)/5 - CAST("YrQty"/52 AS INTEGER) * ("LtdLt"+1)/5 + 1 AS INTEGER) + GREATEST(0, LTDMD."LtDmd" - CAST("YrQty" / 52 AS INTEGER) * ("LtdLt" + 1) / 5) + CAST("YrQty"/52 AS INTEGER)
    	END AS INTEGER) <> "MinStock"
    	OR
	    CAST(CASE
    		WHEN fwhl."Name"='NONSTOCK' OR "PlaningSys"<>'M' THEN 0 
    		ELSE CAST("YrQty"/52 * ("LtdLt"+1)/5 - CAST("YrQty"/52 AS INTEGER) * ("LtdLt"+1)/5 + 1 AS INTEGER) + GREATEST(0, LTDMD."LtDmd" - CAST("YrQty" / 52 AS INTEGER) * ("LtdLt" + 1) / 5) + CAST("YrQty"/52 AS INTEGER)
    	END AS INTEGER)  <> "MaxStock"
    	OR ("PlaningSys"<>'M' AND "MinStock"<>0 AND "MaxStock"<>0)
),

OITW AS(
SELECT 'ParentKey' AS "ParentKey", 'LineNum' AS "LineNum", 'MinimalStock' AS "MinimalStock", 'MaximalStock' AS "MaximalStock"  FROM DUMMY UNION ALL 
SELECT "FctItemCode" AS "ParentKey", CAST("WhLineNum" AS VARCHAR) AS "LineNum" , CAST("MinimalStock" AS VARCHAR) AS "MinimalStock", CAST("MaximalStock" AS VARCHAR) AS "MaximalStock"
FROM MINMAX  
)
SELECT 'ParentKey' AS "ParentKey", 'LineNum' AS "LineNum", 'MinimalStock' AS "MinimalStock", 'MaximalStock' AS "MaximalStock"  FROM DUMMY UNION ALL 
SELECT "FctItemCode" AS "ParentKey", CAST("WhLineNum" AS VARCHAR) AS "LineNum" , CAST("MinimalStock" AS VARCHAR) AS "MinimalStock", CAST("MaximalStock" AS VARCHAR) AS "MaximalStock"
FROM MINMAX
