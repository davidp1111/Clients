--AXIS/SQL_FORECAST.txt 2024-09-03_1221

WITH DMD AS(
	SELECT NULL AS "DocEntry", NULL AS "LineNum", im."ItemCode", im."Warehouse" AS "WhsCode", w1."WhsCode" AS "RcvWhs", im."DocDate", im."DocDate" AS "ShipDate", 
	(im."InQty"-im."OutQty") * -1 AS "Quantity", 'WHS'||w1."WhsCode" AS "CardCode"
	FROM OINM im
	JOIN WTR1 w1 ON im."CreatedBy"=w1."DocEntry" AND im."DocLineNum"=w1."LineNum"
	JOIN OITM i ON im."ItemCode"=im."ItemCode"
	WHERE im."DocDate" >= ADD_MONTHS(TO_DATE(YEAR(CURRENT_DATE) || '-' || LPAD(MONTH(CURRENT_DATE), 2, '0') || '-01', 'YYYY-MM-DD'), -12)
	AND im."Warehouse" IN('02') --From Warehouse
	AND w1."WhsCode" IN('TruckStock') --To Warehouse (ie Truck Stock)
	AND im."TransType"=67
	UNION ALL
	SELECT
	"DocEntry", "LineNum", "ItemCode", '03' AS "WhsCode", 'SALE' AS "RcvWhs", "DocDate", "ShipDate", "Quantity", "BaseCard" AS "CardCode"
	FROM RDR1
	WHERE "Quantity" > 0 AND NOT ("LineStatus"='C' AND "TargetType" = -1) AND "LineStatus" IN ('O', 'C') AND "DropShip"='N' 
	      AND "ShipDate" >= ADD_MONTHS(TO_DATE(YEAR(CURRENT_DATE) || '-' || LPAD(MONTH(CURRENT_DATE), 2, '0') || '-01', 'YYYY-MM-DD'), -12) 
	    --AND "WhsCode" IN('01') 
),

FCT_DETAIL AS (
	SELECT 
	COUNT (*) OVER () AS total_row_count, 
	CASE
			WHEN IFNULL(ib."RuleCode",'') <> 'DF' AND IFNULL(i."RuleCode", '') <> 'DF' 
			THEN CURRENT_SCHEMA||'_HISTORICAL ('||TO_VARCHAR(CURRENT_TIMESTAMP, 'MM/DD/YYYY HH24:MI')
			ELSE	CURRENT_SCHEMA||'_FUTURE_' || COALESCE('CG' || cg."GroupCode", 'WHT')||	
					     CASE 
					        WHEN COALESCE('CG' || cg."GroupCode", 'WHT') = COALESCE(c."ChannlBP", 'CG' || cg."GroupCode", 'WHT')
					        THEN '_OTHER'
					        ELSE '_' || COALESCE(c."ChannlBP", 'CG' || cg."GroupCode", 'WHT')
					     END||' - '||
					LEFT(cg."GroupName", 16)||': '||LEFT(IFNULL(cbp."CardName",'OTHER'), 20)||'  ('||TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYYMMDD_HH24MI')
	END AS "FctSheetName",
	COALESCE('CG'||cg."GroupCode", 'TRWHS') AS "FctGroupCode",
	CASE 
	    WHEN IFNULL(ib."RuleCode",'') <> 'DF' AND IFNULL(i."RuleCode", '') <> 'DF' THEN CURRENT_SCHEMA||'_HF'
	    ELSE COALESCE(c."ChannlBP", 'CG' || cg."GroupCode", 'TRWHS')--||'DF' 
	END AS "FctSheetCode",
	r1."CardCode" AS "FctCardCode",	
	TO_NVARCHAR(YEAR("ShipDate") + 1) || TO_NVARCHAR(MONTH("ShipDate"), '00') || '01' AS "FctPeriod",
	COALESCE(ai."ItemCode",i."ItemCode") AS "FctItemCode",
	r1."WhsCode" AS "FctWhsCode",	
	r1."DocEntry", r1."LineNum",
	ai."ItemCode" AS "AltItemCode", i."ItemCode" AS "OrderItemCode", COALESCE(ai."ItemCode",i."ItemCode") AS "ItemCode", 
	ai."PlaningSys" AS "AltPlaningSys", i."PlaningSys" AS "OrderPlaningSys", COALESCE(ai."PlaningSys",i."PlaningSys") AS "PlaningSys",
	ai."LeadTime" AS "AltLeadTime", i."LeadTime" AS "OrderLeadTime", COALESCE(ai."LeadTime",i."LeadTime") AS "LeadTime",	
	ai."OrdrIntrvl" AS "AltOrdrIntrvl", i."OrdrIntrvl" AS "OrderOrdrIntrvl", COALESCE(ai."OrdrIntrvl",i."OrdrIntrvl") AS "OrdrIntrvl",	
	ai."OrdrMulti" AS "AltOrdrMulti", i."OrdrMulti" AS "OrderOrdrMulti", COALESCE(ai."OrdrMulti",i."OrdrMulti") AS "OrdrMulti",
	acy."Name" AS "AltName", cy."Name" AS "OrderName", COALESCE(acy."Name",cy."Name") AS "Name",
 	a."Match", r1."Quantity" AS "OrderQuantity", CAST(CASE WHEN a."Match" IS NULL then "Quantity" ELSE 100/a."Match" * "Quantity" END AS INTEGER) AS "Quantity",
	r1."CardCode" AS "CustCardCode", ai."CardCode" AS "AltVendCode", i."CardCode" AS "OrderVendCode", COALESCE(ai."CardCode",i."CardCode") AS "VendCode",
	r1."WhsCode", r1."WhsCode" AS "ShipWhs", "DocDate", "ShipDate", a."Remarks", iw."MinOrder",
    --ADD_MONTHS(TO_DATE(ADD_DAYS(CURRENT_DATE, -DAYOFWEEK(CURRENT_DATE))), -12) AS "YrStartDate",
    --TO_DATE(ADD_DAYS(CURRENT_DATE, -DAYOFWEEK(CURRENT_DATE))) AS "YrEndDate",
    ib."ItmsGrpCod", ib."ItmsGrpNam", 'CG-'||cg."GroupCode" AS "GroupCode", cg."GroupName", c."ChannlBP", i."RuleCode",
	CASE 
        WHEN ib."RuleCode" = 'DF' OR i."RuleCode" = 'DF' THEN 'FUTURE'
        ELSE 'HISTORICAL'
    END AS "DF_Status",
	CASE
		WHEN "ShipDate" >= ADD_MONTHS(TO_DATE(YEAR(CURRENT_DATE) || '-' || LPAD(MONTH(CURRENT_DATE), 2, '0') || '-01', 'YYYY-MM-DD'), -12) AND
		"ShipDate" <=ADD_DAYS(ADD_MONTHS(TO_DATE(YEAR(CURRENT_DATE) || '-' || LPAD(MONTH(CURRENT_DATE), 2, '0') || '-01', 'YYYY-MM-DD'), 0),-1) 
		THEN 1
		ELSE 0
	END AS FUTURE_PD,
	CASE
	    WHEN "ShipDate" >= ADD_DAYS(ADD_MONTHS(CURRENT_DATE, -12), 1) AND "ShipDate"<= CURRENT_DATE THEN 1 ELSE 0
	END AS HISTORICAL_PD
	FROM DMD r1
	LEFT JOIN OITM i ON r1."ItemCode"=i."ItemCode"
	LEFT JOIN OITW iw ON r1."ItemCode"=iw."ItemCode" AND '03'=iw."WhsCode" 
	LEFT JOIN OCRD c ON r1."CardCode"=c."CardCode"
	LEFT JOIN OCRD cbp ON cbp."CardCode"=c."ChannlBP"
	LEFT JOIN OCYC cy ON cy."Code" = i."OrdrIntrvl" 
	LEFT JOIN OALI a ON r1."ItemCode"=a."OrigItem" AND i."PlaningSys"='N'
	LEFT JOIN OITM ai ON (a."AltItem"=ai."ItemCode" OR ai."ItemCode" IS NULL)  AND i."PlaningSys"='N'
	LEFT JOIN OCYC acy ON acy."Code" = ai."OrdrIntrvl"
	LEFT JOIN OCRG cg ON  cg."GroupCode"=c."GroupCode"
	LEFT JOIN OITB ib ON ib."ItmsGrpCod"=i."ItmsGrpCod"	
	WHERE i."LeadTime"<>0 AND i."LeadTime" IS NOT NULL AND cy."Name"<> 'NONSTOCK' AND NOT(i."PlaningSys"='N' AND ai."PlaningSys"='N') 
),

FCT_CARDCODE_FUTURE AS(	--FUTURE USE	
SELECT "FctGroupCode", "FctSheetCode", "FctCardCode", "FctItemCode", "FctPeriod", "FctWhsCode", "DF_Status", SUM("Quantity") AS "FctQuantity"
FROM FCT_DETAIL 
WHERE "DF_Status"='FUTURE'AND FUTURE_PD=1
GROUP BY "FctSheetName", "FctGroupCode", "FctSheetCode", "FctCardCode", "FctItemCode", "FctPeriod", "FctWhsCode", "DF_Status"
),

FCT_GROUPCODE_FUTURE AS(	 --FUTURE USE
SELECT "FctGroupCode", "FctItemCode", "FctPeriod", "FctWhsCode", "DF_Status", SUM("Quantity") AS "FctQuantity"
FROM FCT_DETAIL 
WHERE "DF_Status"='FUTURE' AND FUTURE_PD=1
GROUP BY "FctGroupCode", "FctItemCode", "FctPeriod", "FctWhsCode", "DF_Status"
),

FCT_SHEETCODE_FUTURE AS(
SELECT F."AbsID" AS "FctAbsID", F."Code", "FctSheetName"||' ID'||F."AbsID"||')' AS "FctSheetName", "FctGroupCode", "FctSheetCode", "FctItemCode",
 "FctPeriod", "FctWhsCode", "DF_Status", SUM("Quantity") AS "FctQuantity", 'M' AS "View",
--TO_VARCHAR(CURRENT_DATE, 'YYYYMM') || '01' AS "StartDate",
--TO_VARCHAR(ADD_MONTHS(ADD_YEARS(CURRENT_DATE, 1), -1), 'YYYYMM') || TO_VARCHAR(LAST_DAY(ADD_MONTHS(ADD_YEARS(CURRENT_DATE, 1), -1)), 'DD') AS "EndDate"
TO_VARCHAR(ADD_DAYS(LAST_DAY(ADD_MONTHS(CURRENT_DATE, -1)), 1), 'YYYYMMDD') AS "StartDate",
TO_VARCHAR(ADD_YEARS(LAST_DAY(ADD_MONTHS(CURRENT_DATE,-1)),1), 'YYYYMMDD') AS "EndDate"
FROM FCT_DETAIL FD
LEFT JOIN OFCT F ON F."Code"=FD."FctSheetCode"
WHERE "DF_Status"='FUTURE' AND FUTURE_PD=1
GROUP BY F."AbsID", F."Code", "FctSheetName", "FctGroupCode", "FctSheetCode", "FctItemCode", "FctPeriod", "FctWhsCode", "DF_Status"
),

FCT_WKLY_HISTORICAL AS(
SELECT F."AbsID" AS "FctAbsID", F."Code", "FctSheetName"||' ID'||F."AbsID"||')' AS "FctSheetName", "FctSheetCode", "FctItemCode", "FctWhsCode", "DF_Status", CAST(SUM("Quantity")/52 AS INTEGER) AS "FctQuantity"
--TO_VARCHAR(ADD_DAYS(CURRENT_DATE, -WEEKDAY(CURRENT_DATE)), 'YYYYMMDD') AS "StartDate",
--TO_VARCHAR(ADD_DAYS(ADD_YEARS(CURRENT_DATE, 1), -WEEKDAY(ADD_DAYS(ADD_YEARS(CURRENT_DATE, 1), 1))), 'YYYYMMDD') AS "EndDate"
FROM FCT_DETAIL FD
LEFT JOIN OFCT F ON F."Code"=FD."FctSheetCode"
WHERE "DF_Status"='HISTORICAL' AND HISTORICAL_PD=1
GROUP BY F."AbsID", F."Code", "FctSheetName", "FctSheetCode", "FctItemCode", "FctWhsCode", "DF_Status"
HAVING CAST(SUM("Quantity")/52 AS INTEGER)>0
),

FCT_SHEETCODE_HISTORICAL AS(
SELECT FWH.*, 'W' AS "View",
TO_VARCHAR(ADD_DAYS(CURRENT_DATE, GENERATED_PERIOD_START), 'YYYYMMDD') AS "FctPeriod",
TO_VARCHAR(ADD_DAYS(CURRENT_DATE, -WEEKDAY(CURRENT_DATE)), 'YYYYMMDD') AS "StartDate",
TO_VARCHAR(ADD_DAYS(ADD_YEARS(CURRENT_DATE, 1), -WEEKDAY(ADD_DAYS(ADD_YEARS(CURRENT_DATE, 1), 1))), 'YYYYMMDD') AS "EndDate"
FROM FCT_WKLY_HISTORICAL FWH
CROSS JOIN SERIES_GENERATE_INTEGER(7, 2 - DAYOFWEEK(CURRENT_DATE), 365)
),

FORECAST AS(
SELECT 
FSL."EndDate" AS "FSL.EndDate", 
TO_VARCHAR(IFNULL(OF."EndDate", F."EndDate"), 'YYYYMMDD') AS "F.EndDate",
--F."Code" AS "F.Code", OF."Code" AS "OF.Code", F."AbsID" AS "F.AbsID", OF."AbsID" AS "OF.AbsID", F1."AbsID" AS "F1.AbsID", "DF_Status",
CASE 
    WHEN IFNULL(OF."Name","FctSheetName") LIKE '%FUTURE%' THEN 'FUTURE'
    WHEN IFNULL(OF."Name","FctSheetName") LIKE '%HISTORICAL%' THEN 'HISTORICAL'
    ELSE 'OTHER' -- Optional: handles cases where neither keyword is found
END AS "Fct_Type",
IFNULL(FSL."FctAbsID",F1."AbsID") AS "AbsID",
F1."LineID" - 1 AS "FCT1.LineID",
ROW_NUMBER() OVER (
    PARTITION BY COALESCE(F1."AbsID", FSL."FctAbsID") 
    ORDER BY 
        CASE 
            WHEN F1."LineID" IS NULL THEN 1 
            ELSE 0 
        END, 
        F1."LineID",
        IFNULL(FSL."FctItemCode", F1."ItemCode"),
        IFNULL(FSL."FctPeriod", TO_CHAR(F1."Date", 'YYYYMMDD'))
) - 1 AS "FctLineID",	
IFNULL(FSL."FctSheetCode", F."Code") AS "Code",
"FctSheetName",
IFNULL(FSL."FctItemCode", F1."ItemCode") AS "ItemCode",  
IFNULL(FSL."FctPeriod", TO_VARCHAR(F1."Date", 'YYYYMMDD')) AS "Date",  
IFNULL(FSL."FctWhsCode", F1."WhsCode") AS "WhsCode", 
F1."Quantity" AS "FCT1.Quantity", FSL."FctQuantity",
FSL."StartDate", FSL."EndDate",
"View"
FROM FCT_SHEETCODE_FUTURE FSL
--FROM FCT_SHEETCODE_HISTORICAL FSL
LEFT JOIN OFCT F ON F."Code"=FSL."FctSheetCode"
FULL OUTER JOIN FCT1 F1 ON (FSL."FctAbsID"=F1."AbsID" OR F1."AbsID" IS NULL)
	 AND (TO_VARCHAR(F1."Date", 'YYYYMMDD') = FSL."FctPeriod" OR F1."Date" IS NULL)
	 AND (F1."ItemCode"=FSL."FctItemCode" OR F1."ItemCode" IS NULL)
	 AND (F1."WhsCode"=FSL."FctWhsCode" OR F1."WhsCode" IS NULL)
LEFT JOIN OFCT OF ON OF."AbsID"= F1."AbsID"	
WHERE IFNULL(OF."Name","FctSheetName") LIKE CURRENT_SCHEMA || '_FUTURE%'
--WHERE IFNULL(OF."Name","FctSheetName") LIKE CURRENT_SCHEMA || '_HISTORICAL%' 
--WHERE IFNULL(OF."Name","FctSheetName") LIKE CURRENT_SCHEMA || '_HISTORICAL%' OR IFNULL(OF."Name","FctSheetName") LIKE CURRENT_SCHEMA || '_FUTURE%'
ORDER BY IFNULL(FSL."FctAbsID",F1."AbsID"), "LineID"
),
OFCT AS(
SELECT 'AbsID' AS "Numerator", 'StartDate' AS "ForecastStartDate", 'EndDate' AS "ForecastEndDate", 'Code' AS "ForecastCode", 'Name' AS "ForecastName", 'FormView' AS "View" 
FROM DUMMY 
UNION ALL
SELECT DISTINCT   
	CAST("AbsID" AS VARCHAR) AS "Numerator",
    CAST("StartDate" AS VARCHAR) AS "ForecastStartDate", 
    CAST("EndDate" AS VARCHAR) AS "ForecastEndDate", 
    CAST("Code" AS VARCHAR) AS "ForecastCode", 
    "FctSheetName" AS "ForecastName", 
    "View" AS "View"
FROM FORECAST
WHERE  "AbsID" IS NOT NULL AND "Code" IS NOT NULL
),
FCT1 AS(
SELECT 
	'ParentKey' AS "ParentKey", 'LineNum' AS "LineNum", 'Quantity' AS "Quantity", 
	'ForecastedDay' AS "ForecastedDay", 'ItemNo' AS "ItemNo", 'Warehouse' AS "Warehouse" 
FROM DUMMY 
UNION ALL
SELECT --IFNULL("EndDate",0), "F.EndDate", "FSL.EndDate", "Fct_Type", "FCT1.Quantity",
	CAST("AbsID" AS VARCHAR) AS "Numerator", 
    CAST("FctLineID" AS VARCHAR) AS "LineNum",
    CAST("FctQuantity" AS VARCHAR) AS "Quantity", 
    CAST("Date" AS VARCHAR) AS "Date", 
    "ItemCode" AS "ItemCode", 
    "WhsCode" AS "Warehouse"
FROM FORECAST
WHERE (IFNULL("EndDate",0)<>"F.EndDate" AND "FCT1.Quantity" IS NULL AND "Fct_Type"='FUTURE') AND 
NOT(IFNULL("FCT1.Quantity",0)=IFNULL("FctQuantity",0) AND "Fct_Type"='HISTORICAL')
)
--SELECT * FROM FCT_DETAIL WHERE "FctSheetCode"<>CURRENT_SCHEMA||'_HF'
--SELECT * FROM FCT_SHEETCODE_HISTORICAL
--SELECT * FROM FCT_SHEETCODE_FUTURE
--SELECT * FROM FORECAST
--SELECT * FROM OFCT
SELECT * FROM FCT1
--SELECT * FROM FCT1 WHERE "AbsID"=24
